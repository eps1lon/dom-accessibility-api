{
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		// trade off between having a warning without consequences on main
		// and having no warning but non-descriptive errors when using typescript@^3.8 syntax
		"warnOnUnsupportedTypeScriptVersion": false
	},
	"plugins": ["@typescript-eslint"],
	"rules": {
		// required for window.Element
		"@typescript-eslint/ban-ts-ignore": "off",
		// I find this rule not very helpful since it prevents me from ordering
		// functions in a file by importance e.g. default export at the top
		"@typescript-eslint/no-use-before-define": "off",
		"no-restricted-properties": [
			2,
			{
				"object": "window",
				// we restrict usage since it is quite costly in jsdom
				// we only access it from a point where the library user can inject their
				// own implementation. See https://github.com/eps1lon/dom-accessibility-api/blob/eb868428a31a093aecc531bf2dd17e8547bd0c3b/sources/accessible-name.ts#L33
				"property": "getComputedStyle"
			}
		],
		"no-restricted-syntax": [
			"error",
			{
				"selector": "ForOfStatement",
				"message": "for-of assumes iterators which require heavy transpilation for es5. Use ArrayFrom(...).forEach instead."
			}
		],
		// Babel transpiles array spread assuming iterators.
		// If we know we have an array we cann use .apply instead.
		// TypeScript will validate that claim.
		"prefer-spread": "off"
	},
	"overrides": [
		{
			"files": ["**/*.js"],
			"rules": {
				// this rule is unfixable in untyped languages
				// https://github.com/typescript-eslint/typescript-eslint/blob/v3.4.0/packages/eslint-plugin/docs/rules/explicit-module-boundary-types.md#configuring-in-a-mixed-jsts-codebase
				"@typescript-eslint/explicit-module-boundary-types": "off",
				// this rule is unfixable in untyped languages
				// https://github.com/typescript-eslint/typescript-eslint/blob/v2.31.0/packages/eslint-plugin/docs/rules/explicit-function-return-type.md#configuring-in-a-mixed-jsts-codebase
				"@typescript-eslint/explicit-function-return-type": "off"
			}
		},
		{
			"files": ["**/__tests__/**/*.js"],
			"env": {
				"browser": true
			},
			"extends": ["plugin:jest/recommended"],
			"plugins": ["jest"],
			"rules": {
				// disable previous window.getComputedStyles restriction
				// perf concerns for this aren't applicable to test
				// since we specifically want to test them
				"no-restricted-properties": "off",
				// disable previous for-of restriction
				// over transpilation isn't a concern for tests
				"no-restricted-syntax": "off"
			}
		}
	]
}
