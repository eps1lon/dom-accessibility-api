trigger:
  - master

# https://developercommunity.visualstudio.com/comments/949241/view.html
pr:
  branches:
    include:
      - "*"

pool:
  vmImage: "ubuntu-latest"

# TODO we don't actually need this for karma or cypress tests
# but it let's us use a single job. No need to split up jobs yet
strategy:
  matrix:
    # active node versions, remove once they reached their EOL
    # EOL: 2021-04-30
    node_10_x:
      node_version: 10.x
    # EOL: 	2022-04-30
    node_12_x:
      node_version: 12.x
    # EOL: 2020-06-01
    node_13_x:
      node_version: 13.x
    # EOL: 2023-04-30
    node_14_x:
      node_version: 14.x

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: "Install Node.js"

  - script: |
      yarn install
    displayName: "Install packages"

  - script: |
      yarn format
      git diff --exit-code
    displayName: "Check format"

  - script: yarn lint
    displayName: "Lint code"

  - script: yarn test:types
    displayName: "Test types"

  - script: |
      yarn build
    displayName: "Build"

  - script: |
      npm pack
      mv dom-accessibility-api-*.tgz dom-accessibility-api.tgz
    displayName: "Prepare smoke tests of build"

  - publish: $(System.DefaultWorkingDirectory)/dom-accessibility-api.tgz
    artifact: dom-accessibility-api-node-$(node_version)

  - script: yarn start
    displayName: "kcd-rollup smoke tests of build"
    workingDirectory: tests/build/fixtures/kcd-rollup

  - script: yarn start
    displayName: "ava+ts-node smoke tests of build"
    workingDirectory: tests/build/fixtures/ava-ts-node

  - script: yarn start
    displayName: "ES modules in node smoke tests of build"
    workingDirectory: tests/build/fixtures/node-es-modules
    # in node 12 we need to use a flag and I'm too lazy to branch even further
    # running in node >= 13 is hopefully a sufficient smoke test
    condition: or(startsWith(variables['node_version'], '13.'), startsWith(variables['node_version'], '14.'))

  - script: yarn test:ci
    displayName: "Run jest tests"

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: "$(System.DefaultWorkingDirectory)/junit.xml"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/coverage/*coverage.xml"
      reportDirectory: "$(System.DefaultWorkingDirectory)/coverage"

  - script: |
      yarn wpt:init
      tests/wpt/wpt make-hosts-file | sudo tee -a /etc/hosts
    displayName: "Prepare web-platform-test"

  - script: yarn test:wpt:jsdom
    displayName: "Run wpt tests in jsdom"

  - script: yarn test:wpt:browser
    displayName: "Run wpt tests in browser"

  - publish: tests/cypress/screenshots
    artifact: browser-test-screenshots-node-$(node_version)
    condition: failed()
    displayName: "Publish cypress screenshots"

  - publish: tests/cypress/videos
    artifact: browser-test-videos-node-$(node_version)
    displayName: "Publish cypress screenshots"
